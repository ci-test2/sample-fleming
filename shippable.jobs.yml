jobs:

#RELEASE

  #- name: rs-release
   # type: release
    #steps:
     # - IN: rs-version
      #- TASK: managed
       # bump: beta
      #- IN: notify-man1cnrimg
      #- IN: triggernotify7

  #- name: rs-man1
   # type: manifest
    #steps:
     # - IN: rs-img1
      #- IN: rs-tg1
      
  #- name: rs-ecsdeployup
   # type: deploy
    #steps:
     # - IN: rs-man1
      #- IN: rs-ecscluster
      #- TASK: managed
       # deployMethod: upgrade
      
 # - name: rs-inrunsh
  #  type: runSh
   # steps:
    #  - IN: rs-sample-script
     # - IN: rs-tg2
      #- TASK:
       # - script: ls
        #- script: ./IN/rs-sample-script/rs-sample-script/echo.sh
      #- on_success:
       # - echo 'This block executes after TASK section executes successfully'
        #- NOTIFY: rs-slack
        
  - name: inrunsh
    type: runSh
    steps:
      - IN: rs-sample-script
        versionName: testsha
      - IN: rs-tg2
      - TASK:
        - script: ls
        - script: ./IN/rs-sample-script/rs-sample-script/echo.sh
       
  - name: outrunsh
    type: runSh
    steps:
      - TASK:
        - script: "mkdir -p /build/state/" # creating directory 
        - script: "touch /build/state/rs-img1.env" # touch will create new empty file with timestamp
        - script: "echo 'versionName=latest' >>  /build/state/rs-img1.env" # this will be adding in the file mongo-image.env
        - script: "echo 'anotherProperty=foo' >>  /build/state/rs-img1.env" # next line will be this in the file mongo-image.env
      - OUT: rs-img1
      - IN: rs-tg3
      #- NOTIFY: rs-slack
